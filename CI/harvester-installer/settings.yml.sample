---
# Jenkins admin user configuration. This user have unrestricted access to
# Jenkins.
JENKINS_ADMIN_USERNAME: admin
JENKINS_ADMIN_PASSWORD: N0Secret!
JENKINS_ADMIN_EMAIL: harvester_admin@suse.com

# Password for the "jenkins" user. This is for setting up a Jenkins slave only.
JENKINS_USER_PASSWORD: jenkins

# Jenkins dev user configuration. This user only have read access to the jobs.
JENKINS_DEV_USERNAME: harvester
JENKINS_DEV_PASSWORD: harvester

# Jenkins public endpoint. If Jenkins is running behind a reversed proxy and
# the proxy IP is different than the Jenkins host, make sure to configure it
# correctly here.
JENKINS_PUBLIC_ENDPOINT: https://ci.harvesterhci.io/

# Github token used by Jenkins to post the result to the pull requests.
GITHUB_CI_USERNAME: harvester-ci
GITHUB_CI_PASSWORD: ghp_g9sDDSsehUePKAQBSzqpMZkVGDYkg0Rx6aJX

# Decide whether to use a reversed proxy and whether to enable SSL for the
# reversed proxy.
# FIXME(gyee): we are using self-signed CA for the SSL certificates right now.
# To avoid browser warnings, we should be using certificates that are issued by
# a commercial CA.
JENKINS_USE_PROXY: True
JENKINS_PROXY_ENABLE_SSL: True

# GitHub App for Harvester-CI:
# We need to have a GitHub App created in order to post results surrounding
# test results, different real time feedback on current provisioning steps,
# plus a lot of other things.
# GitHub credentials DO NOT allow you to communicate with the GitHub Checks API
# and because of this creating a GitHub App is not only a best practice
# but it also has a much higher rate-limit of communication out to GitHub than
# the GitHub Credenitals allow
# Private key for authenticating to GitHub with, it must be in PKCS#8 format, GitHub will give it to you in PKCS#1.
# You can convert it with openssl pkcs8 -topk8 -inform PEM -outform PEM -in current-key.pem -out new-key.pem -nocrypt 
GITHUB_APP_ID: 000001
# GITHUB_APP_PRIVATE_KEY_CONVERTED: |-
#   -----BEGIN PRIVATE KEY-----
#   -----END PRIVATE KEY-----
GITHUB_APP_OWNER: harvester